import numpy as np
import matplotlib.pyplot as pl
def splinem(x,y):
    n=len(x)-1
    X=np.linspace(x[0],x[n],n*10)
    N=len(X)-1
    #计算d
    M=y
    y=tuple(y)
    for k in range(1,3,1):
        for i in range(n,k-1,-1):
            M[i]=(M[i]-M[i-1])/(x[i]-x[i-k])
    h=[]
    h.append(x[1]-x[0])
    c=np.zeros(n+1)
    a=np.zeros(n+1)
    d=np.zeros(n+1)
    b=np.ones(n+1)*2
    for i in range(1,n,1):
        h.append(x[i+1]-x[i])
        c[i]=h[i]/(h[i]+h[i-1])
        a[i]=1-c[i]
        d[i]=6*M[i+1]
    #使用算法TSS计算M
    u=[]
    u.append(b[0])
    Y=[]
    Y.append(d[0])
    l=[]
    l.append(0)
    for k in range(1,n+1,1):
        l.append(a[k]/u[k-1])
        u.append(b[k]-l[k]*c[k-1])
        Y.append(d[k]-l[k]*Y[k-1])
    M[n]=Y[n]/u[n]
    for k in range(n-1,-1,-1):
        M[k]=(Y[k]-c[k]*M[k+1])/u[k]
    #计算三次样条插值函数
    s=np.zeros(N+1)
    k=1
    for m in range(N+1):
        for i in range(1,n+1,1):
            if X[m]<=x[i]:
                k=i
                break
            else:
                k=i
        H=2
        x1=x[k]-X[m]
        x2=X[m]-x[k-1]
        s[m]=(M[k-1]*(x1**3)/6+M[k]*(x2**3)/6+(y[k-1]-(M[k-1]*(H**2)/6))*x1+(y[k]-(M[k]*(H**2)/6))*x2)/H
    pl.plot(x,y,'b.',label="插值点")
    pl.plot(X,s,'r-',label="三次样条曲线")
    pl.show()
    #积分所需长度
    l=0
    for i in range(1,N+1,1):
        l=l+((X[i]-X[i-1])**2+(s[i]-s[i-1])**2)**0.5
    return l
x=np.linspace(0,52,27)
y=[0,-4.01,-6.96,-7.96,-7.97,-8.02,-9.05,-10.13,-11.18,-12.26,-13.28,-12.61,-10.22,-7.90,-7.95,-8.86,-10.08,-10.93,-11.23,-11.30,-10.94,
   -10.10,-9.54,-8.30,-7.30,-2.50,-0.20]
r=splinem(x,y)
print(r)
